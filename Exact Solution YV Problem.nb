(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    324909,       6888]
NotebookOptionsPosition[    316060,       6742]
NotebookOutlinePosition[    316406,       6757]
CellTagsIndexPosition[    316363,       6754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Exact Solution of the Younan-Veletsos Problem",
 FontVariations->{"Underline"->True}]], "Title",
 CellChangeTimes->{{3.779316902710348*^9, 
  3.77931691731556*^9}},ExpressionUUID->"6ec180d4-c160-462a-8270-\
35196dcd35ae"],

Cell[TextData[StyleBox["Joaquin Garcia-Suarez, 2020 (All rights reserved)",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{
  3.7795492233414707`*^9, {3.7887637561336703`*^9, 
   3.78876375622742*^9}},ExpressionUUID->"2ca6a505-dc35-47d1-bcec-\
2d2e4dc20519"],

Cell["\<\
This notebook details and displays the results contained in \
\[OpenCurlyDoubleQuote]Younan-Veletsos retaining wall: The exact solution\
\[CloseCurlyDoubleQuote]. Here one can find some steps of the algebra leading \
to the exact solution, as well as the data used to generate the plots in the \
body of the manuscript. References to the actual text are included. \
\>", "Text",
 CellChangeTimes->{{3.7793170750113535`*^9, 3.779317095270144*^9}, {
   3.7793171411561556`*^9, 3.7793172673992977`*^9}, 3.7793173018156147`*^9, {
   3.7794663495338645`*^9, 3.7794663499244823`*^9}, {3.7887637755587444`*^9, 
   3.788763839162678*^9}},ExpressionUUID->"2f8f6c24-260f-4c35-aa30-\
9c45b6543c09"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Details on derivations",
 FontVariations->{"Underline"->True}]], "Chapter",
 CellChangeTimes->{{3.7793173130450068`*^9, 
  3.779317322166416*^9}},ExpressionUUID->"84b649b4-2fa5-41ae-9e2a-\
a5b919c75490"],

Cell[CellGroupData[{

Cell["The transform of the load", "Subchapter",
 CellChangeTimes->{{3.779317338844614*^9, 
  3.779317347265549*^9}},ExpressionUUID->"4b774698-d97c-446d-92ed-\
3cdc618b83f6"],

Cell["\<\
It follows, for display purposes, the transform of the sign function\
\>", "Text",
 CellChangeTimes->{{3.779317475494644*^9, 
  3.7793174987215652`*^9}},ExpressionUUID->"abb3dcbd-82fb-4c58-a5aa-\
49db2df832a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{"HeavisideTheta", "[", "\[Xi]", "]"}]}], "-", "1"}], ",", 
   "\[Xi]", ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.769005092014227*^9, 
  3.769005126625534*^9}},ExpressionUUID->"a54cce7c-2050-41cd-9751-\
4d6123291082"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["2", "\[Pi]"]]}], "k"]], "Output",
 CellChangeTimes->{3.76900513147779*^9, 3.779317596765009*^9, 
  3.7887789012551737`*^9, 
  3.7887847526144776`*^9},ExpressionUUID->"317cd4ef-7d6c-4daa-aff8-\
e05bd2ba5859"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The matrix ",
 StyleBox["D ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "and the corresponding eigensystem"
}], "Subchapter",
 CellChangeTimes->{{3.7793173903588033`*^9, 3.7793173956275663`*^9}, {
  3.779317432769413*^9, 
  3.7793174488994637`*^9}},ExpressionUUID->"e002f930-4e31-4487-b85f-\
b2ac8c06624b"],

Cell["\<\
The matrix D appears in eq.(C.20) and its actual expression is given in (18):\
\>", "Text",
 CellChangeTimes->{{3.7793175095227838`*^9, 3.779317580855175*^9}, {
  3.7887639645535927`*^9, 
  3.7887639648660927`*^9}},ExpressionUUID->"75f3860c-f37e-4d06-91b9-\
8b6b7cd9781e"],

Cell[BoxData[
 RowBox[{"Dm", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["c", "2"], "*", 
        SuperscriptBox["k", "2"]}], "-", 
       SuperscriptBox["r", "2"]}], ",", 
      RowBox[{"\[ImaginaryI]", "*", "k", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["c", "2"]}], ")"}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", "*", "k", "*", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c", "2"]}], ")"}], 
        SuperscriptBox["c", "2"]]}], ",", "0", ",", "0", ",", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "-", 
         SuperscriptBox["r", "2"]}], ")"}], 
       SuperscriptBox["c", "2"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.756084525194632*^9, 
  3.7560845453298883`*^9}},ExpressionUUID->"3bd239f0-278a-4478-9272-\
9a987c2b65f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "Dm", "]"}]], "Input",
 CellChangeTimes->{{3.7560845511290236`*^9, 3.7560845602004385`*^9}, {
  3.7560865150631275`*^9, 
  3.7560865197264333`*^9}},ExpressionUUID->"ffc3ce85-6fe8-4dad-983f-\
2950dcf3a938"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        SuperscriptBox["r", "2"]}]]}], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       SuperscriptBox["r", "2"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["k", "2"]}], "-", 
           SuperscriptBox["r", "2"]}], ")"}]}]], 
       SuperscriptBox["c", "2"]]}], ",", 
     FractionBox[
      SqrtBox[
       RowBox[{
        SuperscriptBox["c", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["k", "2"]}], "-", 
          SuperscriptBox["r", "2"]}], ")"}]}]], 
      SuperscriptBox["c", "2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           SuperscriptBox["r", "2"]}], ")"}]}], "k"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            SuperscriptBox["r", "2"]}]]}], "k"]}], ",", 
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          SuperscriptBox["r", "2"]}]]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           SuperscriptBox["r", "2"]}], ")"}]}], "k"], ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           SuperscriptBox["r", "2"]}]]}], "k"], ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k", "2"], "-", 
         SuperscriptBox["r", "2"]}]], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "k"}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "k", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["k", "2"]}], "-", 
              SuperscriptBox["r", "2"]}], ")"}]}]]}], 
         RowBox[{
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["k", "2"]}], "-", 
          SuperscriptBox["r", "2"]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         SqrtBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["k", "2"]}], "-", 
             SuperscriptBox["r", "2"]}], ")"}]}]], 
         SuperscriptBox["c", "2"]]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "k"}], ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["k", "2"]}], "-", 
             SuperscriptBox["r", "2"]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["k", "2"]}], "-", 
         SuperscriptBox["r", "2"]}]], ",", 
       FractionBox[
        SqrtBox[
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["k", "2"]}], "-", 
            SuperscriptBox["r", "2"]}], ")"}]}]], 
        SuperscriptBox["c", "2"]], ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7560845605696983`*^9, 3.756086520438939*^9, 
  3.7793176130912857`*^9, 3.7887789026458006`*^9, 
  3.788784752942542*^9},ExpressionUUID->"041546df-7935-488b-84a0-\
a0fa04a77840"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving for the constants", "Subchapter",
 CellChangeTimes->{{3.7793177462793765`*^9, 
  3.7793177509875827`*^9}},ExpressionUUID->"2a55d724-14f3-4cb1-802a-\
ea6ed50fa53b"],

Cell["\<\
Next, it follows the system of equations displayed in eq.(27), and the \
explicit solution of it, eqs.(28) and eqs.(29):\
\>", "Text",
 CellChangeTimes->{{3.779317765108342*^9, 3.779317872570656*^9}, {
  3.7887640738008585`*^9, 3.788764105091058*^9}, {3.788764897232561*^9, 
  3.7887649009359856`*^9}},ExpressionUUID->"3da25277-0621-4a39-a2af-\
63d7764132f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", "*", "\[Alpha]"}], "k"]}], ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", "*", "\[Alpha]"}], "k"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", "*", "k"}], "\[Beta]"]}], ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", "*", "k"}], "\[Beta]"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "+", 
          FractionBox[
           SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "\[Alpha]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "+", 
          FractionBox[
           SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}], "*", 
        RowBox[{"Exp", "[", "\[Alpha]", "]"}]}], ",", 
       RowBox[{"2", "*", "k", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "\[Beta]"}], "]"}]}], ",", 
       RowBox[{"2", "*", "k", "*", 
        RowBox[{"Exp", "[", "\[Beta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "\[Alpha]", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "\[Alpha]"}], "]"}]}], ",", 
       RowBox[{"2", "\[Alpha]", "*", 
        RowBox[{"Exp", "[", "\[Alpha]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{
             SuperscriptBox["c", "2"], 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], "-", 
               SuperscriptBox["k", "2"]}], ")"}]}], "+", 
            RowBox[{"2", 
             SuperscriptBox["k", "2"]}]}], "\[Beta]"], ")"}]}], 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "\[Beta]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["c", "2"], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "-", 
              SuperscriptBox["k", "2"]}], ")"}]}], "+", 
           RowBox[{"2", 
            SuperscriptBox["k", "2"]}]}], "\[Beta]"], ")"}], 
        RowBox[{"Exp", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7661335867523527`*^9, 3.766133835905917*^9}, {
   3.766133877397501*^9, 3.766133884278783*^9}, {3.766133932316292*^9, 
   3.766133955759178*^9}, 3.7661339881363974`*^9, {3.7702099595734687`*^9, 
   3.770210005652261*^9}, 
   3.779317681775297*^9},ExpressionUUID->"a7ede090-8401-4dc5-95f9-\
d18ad30c21e5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "k"]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "k"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "k"}], "\[Beta]"]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "k"}], "\[Beta]"]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[Alpha]"}]], " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", 
         FractionBox[
          SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", 
         FractionBox[
          SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[Beta]"}]], " ", "k"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", "k"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[Alpha]"}]], " ", "\[Alpha]"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", "\[Alpha]"}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "\[Beta]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}], 
        "\[Beta]"]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["k", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["k", "2"]}], "+", 
             SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}], "\[Beta]"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7661339564126034`*^9, 3.7661339886737633`*^9, 
  3.770210007455406*^9, 3.7793176839915185`*^9, 3.7887789029270425`*^9, 
  3.788784752973789*^9},ExpressionUUID->"eeb4d6b2-229a-4a03-bd47-\
db7d43d66c71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.766133989934182*^9, 3.7661339999821343`*^9}, 
   3.7793176947487593`*^9},ExpressionUUID->"f87308ea-0f5f-4d39-8fb0-\
9b739cd31ccb"],

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "1", "1", "1"},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "k"]}], 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "k"], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "k"}], "\[Beta]"]}], 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "k"}], "\[Beta]"]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Alpha]"}]], " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", 
          FractionBox[
           SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", 
          FractionBox[
           SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]"}]], " ", "k"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", "k"}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Alpha]"}]], " ", "\[Alpha]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", "\[Alpha]"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "\[Beta]"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["k", "2"]}], "+", 
               SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}], 
         "\[Beta]"]}], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}], "\[Beta]"]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Output",
 CellChangeTimes->{3.7661340004088936`*^9, 3.7702100125796366`*^9, 
  3.779317695497016*^9, 3.788778903020795*^9, 
  3.7887847530206842`*^9},ExpressionUUID->"d0f2b78e-9736-4b92-8eb8-\
58232dfacf67"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7661339445479746`*^9, 
  3.7661339832921777`*^9}},ExpressionUUID->"bea2ccb5-703a-442c-81ff-\
9579a3605a30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", " ", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", "*", "\[Alpha]"}], "k"]}], ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", "*", "\[Alpha]"}], "k"], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", "*", "k"}], "\[Beta]"]}], ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", "*", "k"}], "\[Beta]"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "+", 
           FractionBox[
            SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "\[Alpha]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "+", 
           FractionBox[
            SuperscriptBox["\[Alpha]", "2"], "k"]}], ")"}], "*", 
         RowBox[{"Exp", "[", "\[Alpha]", "]"}]}], ",", 
        RowBox[{"2", "*", "k", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "\[Beta]"}], "]"}]}], ",", 
        RowBox[{"2", "*", "k", "*", 
         RowBox[{"Exp", "[", "\[Beta]", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "\[Alpha]"}], "]"}]}], ",", 
        RowBox[{"2", "\[Alpha]", "*", 
         RowBox[{"Exp", "[", "\[Alpha]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["c", "2"], 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Beta]", "2"], "-", 
                SuperscriptBox["k", "2"]}], ")"}]}], "+", 
             RowBox[{"2", 
              SuperscriptBox["k", "2"]}]}], "\[Beta]"], ")"}]}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "\[Beta]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{
             SuperscriptBox["c", "2"], 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], "-", 
               SuperscriptBox["k", "2"]}], ")"}]}], "+", 
            RowBox[{"2", 
             SuperscriptBox["k", "2"]}]}], "\[Beta]"], ")"}], 
         RowBox[{"Exp", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "/", "\[Pi]"}], "]"}], 
      FractionBox["\[ImaginaryI]", 
       RowBox[{"k", "*", 
        SuperscriptBox["c", "2"], "*", 
        SuperscriptBox["\[Beta]", "2"]}]]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "\[Pi]"}], "]"}]}], 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "2"], "-", "2"}], ")"}], 
       RowBox[{
        SuperscriptBox["c", "2"], "*", 
        SuperscriptBox["\[Beta]", "2"]}]]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661340500647173`*^9, 3.766134076245725*^9}, {
   3.766134220594366*^9, 3.766134333173023*^9}, 3.769004749433155*^9, {
   3.769097402882245*^9, 3.7690974175102205`*^9}, {3.7690980394586077`*^9, 
   3.7690980474209623`*^9}, {3.769098809221429*^9, 3.7690988143631067`*^9}, {
   3.7690996605853605`*^9, 3.769099663867299*^9}, {3.7702100514256573`*^9, 
   3.770210059823805*^9}, {3.779317703161818*^9, 
   3.779317715672866*^9}},ExpressionUUID->"0b35d074-096c-456c-a4ea-\
385bf003bc0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SuperscriptBox["c", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", "\[Alpha]"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], "2"], " ", 
       SuperscriptBox["k", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["c", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Beta]"}]]}], ")"}], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}], " ", "\[Alpha]", " ", 
          "\[Beta]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[Beta]"}]], " ", "\[Alpha]", " ", "\[Beta]"}], 
         "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "2"]}], "-", 
            RowBox[{"4", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"2", " ", "\[Beta]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "2"]}], "+", 
            RowBox[{"4", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[Beta]"}]]}], ")"}], " ", "\[Alpha]", " ", 
         "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox["c", "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Alpha]", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox["c", "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Alpha]", "2"], "+", 
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox["c", "2"]}], ")"}], " ", 
                  SuperscriptBox["\[Alpha]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Beta]", "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], "-", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", "\[Alpha]"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], "2"], " ", 
         SuperscriptBox["k", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[Beta]"}]]}], ")"}], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}]}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], "2"], 
            " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               SuperscriptBox["\[ExponentialE]", "\[Alpha]"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[Beta]"}]]}], ")"}], " ", "\[Alpha]", " ", 
            "\[Beta]"}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[Beta]"}]], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}], ")"}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "2"], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox["c", "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Beta]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Alpha]", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox["c", "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Alpha]", "2"], "+", 
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox["c", "2"]}], ")"}], " ", 
                  SuperscriptBox["\[Alpha]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Beta]", "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}], " ", 
             SuperscriptBox["\[ExponentialE]", "\[Beta]"]}]}], ")"}], " ", 
          SuperscriptBox["k", "2"]}], "+", 
         SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", "\[Beta]"}], "+", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
          SuperscriptBox["k", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            SuperscriptBox["\[Alpha]", "2"]}], ")"}]}]}], ")"}], " ", 
       "\[Beta]", " ", 
       RowBox[{"Cosh", "[", "\[Alpha]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["c", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], " ", 
          SuperscriptBox["k", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
          SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
       RowBox[{"Sinh", "[", "\[Alpha]", "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox["c", "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Beta]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Alpha]", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox["c", "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Alpha]", "2"], "+", 
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox["c", "2"]}], ")"}], " ", 
                  SuperscriptBox["\[Alpha]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Beta]", "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], "-", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["c", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[Alpha]"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], " ", 
         SuperscriptBox["k", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[Alpha]"}]]}], ")"}], " ", "\[Beta]"}], 
           "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               RowBox[{"Cosh", "[", "\[Alpha]", "]"}]}]}], ")"}]}]}], ")"}]}],
         "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox["c", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[Alpha]"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", "\[Beta]"]}], ")"}], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[Alpha]"}]]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", "\[Alpha]", 
            " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"], "+", 
                 SuperscriptBox["\[ExponentialE]", "\[Alpha]"]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "\[Beta]"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["c", "2"]}], ")"}], " ", 
                  RowBox[{"Cosh", "[", "\[Alpha]", "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SuperscriptBox["c", "2"], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox["c", "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox["c", "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Beta]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Alpha]", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox["c", "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox["\[Alpha]", "2"], "+", 
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox["c", "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox["c", "2"]}], ")"}], " ", 
                  SuperscriptBox["\[Alpha]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Beta]", "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.779317781522046*^9, 3.7887789231410007`*^9, 
  3.7887848227308865`*^9},ExpressionUUID->"7a2ceeea-87a5-4b4c-8c53-\
af9b5ba3e0ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Evaluation of the solution and plotting the results",
 FontVariations->{"Underline"->True}]], "Chapter",
 CellChangeTimes->{{3.7793180819517903`*^9, 
  3.779318120892984*^9}},ExpressionUUID->"cd49016a-5eb1-4cc7-9e50-\
27060cb7d2a4"],

Cell[CellGroupData[{

Cell["Auxiliary Parameters", "Subchapter",
 CellChangeTimes->{{3.7661345294665213`*^9, 
  3.7661345337692966`*^9}},ExpressionUUID->"b54ed2d1-c401-45ad-85aa-\
061565bb5258"],

Cell[TextData[{
 "Some basic parameters that appear, over and over, in the solution: \
respectively, the dimensionless frequencies ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", "and", " ", 
    SubscriptBox["r", "c"]}], TraditionalForm]],ExpressionUUID->
  "31206dab-87ea-40e8-b910-d4be2354608a"],
 "=r/c (both including the damping), the dimensionless wavenumber of S waves \
\[Alpha] and of P waves \[Beta]."
}], "Text",
 CellChangeTimes->{{3.779318184300769*^9, 3.779318298927498*^9}, {
  3.7887641466051283`*^9, 
  3.7887641481366425`*^9}},ExpressionUUID->"70581226-2a9f-49e4-bc07-\
469cd19583fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "\[Nu]_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Nu]"}], ")"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"2", "\[Nu]"}]}]], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.769435970313078*^9, 
  3.769435973163319*^9}},ExpressionUUID->"3456849f-86e9-4bfc-90e0-\
f6b5b1b8e03f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rd", "[", 
    RowBox[{"r_", ",", "\[Delta]_"}], "]"}], ":=", 
   FractionBox["r", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", "*", "\[Delta]"}]}], "]"}]]}], ";"}]], "Input",\
ExpressionUUID->"3523f1fd-a466-4a2b-8272-c34164f37da8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rc", "[", 
    RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"r", "/", 
     RowBox[{"c", "[", "\[Nu]", "]"}]}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", "*", "\[Delta]"}]}], "]"}]]}], ";"}]], "Input",\
ExpressionUUID->"4a038fbd-2a55-43ed-b6b7-aefc52094d0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["k", "2"], "-", 
     SuperscriptBox[
      RowBox[{"rd", "[", 
       RowBox[{"r", ",", "\[Delta]"}], "]"}], "2"]}], "]"}]}], ";"}]], "Input",\
ExpressionUUID->"3f806ce5-9b30-4ce3-8bd8-bcc6f7a8b451"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["k", "2"], "-", 
     SuperscriptBox[
      RowBox[{"rc", "[", 
       RowBox[{"r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "2"]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"2e9445b8-aa57-4191-85dd-1aa8ac4a3e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficients", "Subchapter",
 CellChangeTimes->{{3.766134605027501*^9, 
  3.766134609065421*^9}},ExpressionUUID->"06a9e0eb-53ca-4902-b6ba-\
026377776c30"],

Cell["\<\
Express the solution of the system (A, B, C, D) given in, eqs.(28) and \
eqs.(29), in a way that can be easily evaluated within the notebook.\
\>", "Text",
 CellChangeTimes->{{3.779318423015711*^9, 3.779318455647686*^9}, {
  3.78876416903494*^9, 3.788764194741926*^9}, {3.788764880338889*^9, 
  3.7887648878555174`*^9}},ExpressionUUID->"0830f2b1-c906-4ab9-b5a5-\
b4a7cc8b153f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ac", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SuperscriptBox[
          RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]]}], 
        ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]]}], 
         ")"}], "2"], " ", 
       SuperscriptBox["k", "4"]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
            "]"}]}]]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "2"], 
       " ", 
       SuperscriptBox[
        RowBox[{"\[Beta]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
        "2"]}], "+", 
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            "+", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}]],
           " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "2"]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}]],
           " ", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
         "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "2"]}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             " ", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}],
             "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            "+", 
            RowBox[{"2", " ", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "2"]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             " ", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}],
             "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"c", "[", "\[Nu]", "]"}], "2"], 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", "\[Pi]"}], "]"}], " ", 
      RowBox[{"\[Beta]", "[", 
       RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]}]]}], ")"}], 
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox[
               RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}]}], "+", 
        RowBox[{"2", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{" ", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}]], 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                   "]"}], "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", 
                    RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                    "]"}], "2"]}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661346339915485`*^9, 3.766134944711944*^9}, 
   3.7661349863879104`*^9, 3.7661350457392416`*^9, {3.766135092892519*^9, 
   3.7661350937179327`*^9}, {3.7691000390437984`*^9, 3.769100103888686*^9}, 
   3.7691001739472847`*^9, {3.769100273607434*^9, 3.7691002919231625`*^9}, 
   3.7691030518877907`*^9, {3.7691031542858253`*^9, 3.7691031551929584`*^9}, {
   3.7691032130381823`*^9, 3.7691032273536887`*^9}, {3.7691032675329704`*^9, 
   3.769103296414545*^9}, {3.7691034414713893`*^9, 3.7691034834388742`*^9}, {
   3.7691035257714043`*^9, 3.7691035423846188`*^9}, {3.7691045035124445`*^9, 
   3.7691045538396654`*^9}, {3.7691046357349367`*^9, 
   3.7691046673995714`*^9}},ExpressionUUID->"29305d89-148e-4f23-8aa8-\
5ec488792bf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Bc", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
        "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}]], 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]]}], ")"}], "2"], " ", 
         SuperscriptBox["k", "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "2"]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]]}], ")"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]}]]}], ")"}], " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
           "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]}]], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", 
                  RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                  "]"}], "+", 
                 RowBox[{"\[Beta]", "[", 
                  RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                  "]"}]}]]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", 
      RowBox[{"\[Beta]", "[", 
       RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox[
               RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                   "]"}], "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", 
                    RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                    "]"}], "2"]}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661358719622526`*^9, 3.7661360464764037`*^9}, 
   3.766136449164067*^9, {3.7691003892079754`*^9, 3.769100391270703*^9}, {
   3.7691005133121805`*^9, 3.769100544760853*^9}, {3.7691005808206844`*^9, 
   3.7691007283533287`*^9}},ExpressionUUID->"cac5ac8e-e1cb-4f46-a5af-\
abb72c9a6a53"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cc", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"\[Alpha]", "[", 
        RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Beta]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
               "]"}]]}]}], ")"}], " ", 
          SuperscriptBox["k", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "2"]}], ")"}], "*", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", 
        RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          " ", 
          SuperscriptBox["k", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
        "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]]}], ")"}], " ", 
          SuperscriptBox["k", "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "2"]}]}], ")"}], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
        "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"c", "[", "\[Nu]", "]"}], "2"], 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "\[Pi]"}], "]"}], " ", 
      RowBox[{"\[Beta]", "[", 
       RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox[
               RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                   "]"}], "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", 
                    RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                    "]"}], "2"]}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661363431335764`*^9, 3.766136516579608*^9}, {
   3.7691008950088935`*^9, 3.769100928406344*^9}, {3.7691010074461727`*^9, 
   3.769101010634637*^9}, {3.769101090085586*^9, 3.769101090476227*^9}, {
   3.769101135398382*^9, 3.769101180340207*^9}, {3.7691013067778625`*^9, 
   3.7691013372198477`*^9}, 3.7691014779007406`*^9, 3.7691015178370867`*^9, {
   3.7691050624241867`*^9, 3.7691050857753277`*^9}, {3.7691051602664757`*^9, 
   3.7691051611887617`*^9}},ExpressionUUID->"3ca1e08c-597a-41be-9805-\
3881509a7f59"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dc", "[", 
    RowBox[{"k_", ",", "r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
        "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}]], 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox[
            RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
              "]"}]}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]]}],
           ")"}], " ", 
         SuperscriptBox["k", "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "2"], " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]}]]}], ")"}], " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
           "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "+", 
              RowBox[{"\[Beta]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
               "]"}]}]], " ", 
            RowBox[{"\[Alpha]", " ", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               RowBox[{"Cosh", "[", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox[
               RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Beta]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                "]"}]]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
           "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]}]]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
            " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                   "]"}]]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox[
                    RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"\[Alpha]", "[", 
                    RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                    "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"c", "[", "\[Nu]", "]"}], "2"], "*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "\[Pi]"}], "]"}], "*", " ", 
      RowBox[{"\[Beta]", "[", 
       RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              SuperscriptBox[
               RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "2"]}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}]}], " ", 
               SuperscriptBox["k", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}],
                "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 SuperscriptBox[
                  RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["k", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                   "]"}], "2"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"c", "[", "\[Nu]", "]"}], "2"], " ", 
                  SuperscriptBox["k", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{"c", "[", "\[Nu]", "]"}], "2"]}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", 
                    RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                    "]"}], "2"]}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
             "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766136542493225*^9, 3.766136768635967*^9}, {
   3.76910252650324*^9, 3.7691025370484776`*^9}, {3.769102692931766*^9, 
   3.769102717906525*^9}, 
   3.769102810351802*^9},ExpressionUUID->"88b1569c-05c8-4e04-86b6-\
7c06dd7bda73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variables", "Subchapter",
 CellChangeTimes->{{3.779319497523653*^9, 
  3.7793194999930315`*^9}},ExpressionUUID->"95354b41-87a5-42e5-a931-\
46e532533088"],

Cell[CellGroupData[{

Cell["Vertical displacement at the top of the wall", "Section",
 CellChangeTimes->{{3.7793195107720785`*^9, 
  3.77931951994573*^9}},ExpressionUUID->"e47ab147-a377-4e8b-8f45-\
b27c355d05ed"],

Cell["\<\
The vertical displacement at the top of the wall is expressed as an inverse \
transform as:\
\>", "Text",
 CellChangeTimes->{{3.77931957110581*^9, 3.7793196214285183`*^9}, 
   3.7887649910638266`*^9},ExpressionUUID->"23145070-6b41-4f5e-9714-\
a82ce52feb9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vtop", "[", 
    RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["2", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "\[Pi]"}], "]"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Ac", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"Bc", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cc", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"Dc", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661368099706025`*^9, 3.7661368589493237`*^9}, {
   3.7661369591710052`*^9, 3.766136976008913*^9}, 3.766137044627095*^9, 
   3.7661371386162667`*^9, {3.766137534681559*^9, 3.766137539375366*^9}, {
   3.7661376337302113`*^9, 3.766137634527457*^9}, {3.7663049926332483`*^9, 
   3.766304996013493*^9}, {3.7663050839093485`*^9, 3.7663050868469644`*^9}, {
   3.7664085172373705`*^9, 3.766408524696253*^9}, {3.766665637020769*^9, 
   3.7666656411257877`*^9}, {3.768908508752351*^9, 3.768908516253936*^9}, {
   3.768908639285343*^9, 3.7689086414476457`*^9}, {3.768908768978606*^9, 
   3.768908769657406*^9}, 3.768908885940965*^9, 3.768908987097412*^9, {
   3.769105223498514*^9, 3.7691052388299847`*^9}, {3.769105435840089*^9, 
   3.7691054360320992`*^9}, 3.7691056492779856`*^9, {3.7691057408541217`*^9, 
   3.769105741026388*^9}},ExpressionUUID->"3e7f6349-9053-49c6-bb60-\
24b712a05190"],

Cell["\<\
See that this expression is just eq.(30b) in the body of the text.\
\>", "Text",
 CellChangeTimes->{{3.779320068589077*^9, 3.7793200979969196`*^9}, {
  3.788764976331441*^9, 
  3.7887649768942823`*^9}},ExpressionUUID->"d958f032-8021-46d9-9564-\
99808a9f87ee"],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.7793196437095385`*^9, 
  3.779319644465626*^9}},ExpressionUUID->"651d5e52-cfe9-40d8-a80f-\
6a16f54d25bc"],

Cell[TextData[{
 "For Figure 8, fix \[Nu]=0.1 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "d"], TraditionalForm]],ExpressionUUID->
  "d9c1d998-88a1-4c06-9149-396b235fb9a4"],
 "=0.16"
}], "Text",
 CellChangeTimes->{{3.779319675646559*^9, 3.779319731258765*^9}, 
   3.788765000112154*^9},ExpressionUUID->"9fa60983-7fed-4db9-ab04-\
88b3a2857967"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU", "=", "0.1"}], ";", " ", 
  RowBox[{"DE", "=", "0.16"}], ";"}]], "Input",
 CellChangeTimes->{{3.766665618702905*^9, 3.766665619171984*^9}, {
   3.766665852762801*^9, 3.766665855249264*^9}, {3.7666660963191466`*^9, 
   3.766666096700388*^9}, 3.766666478219246*^9, {3.7666690799490166`*^9, 
   3.766669081368064*^9}, {3.7793197368474283`*^9, 
   3.7793197372653427`*^9}},ExpressionUUID->"ab2a8037-1baa-4051-aebc-\
4628818845ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{"vtop", "[", 
      RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7793197574775915`*^9},ExpressionUUID->"79b8e47b-b08a-4e0f-91d3-\
e6e69437d530"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$39750#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 4}, {0., 0.3307955357984947}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768908598622446*^9, 3.7689089504841957`*^9, 
  3.7689090423026466`*^9, 3.7689111961655126`*^9, 3.769004608015543*^9, 
  3.769105318174282*^9, 3.769105724163087*^9, 3.769105818906104*^9, 
  3.7747952885074997`*^9, 3.775315445511156*^9, 3.7793197758554544`*^9, 
  3.7793198289004946`*^9, 3.7887661027581625`*^9, 
  3.7887848735641766`*^9},ExpressionUUID->"50bb8573-4904-43c8-872f-\
c5dbe42d39ef"]
}, Open  ]],

Cell[TextData[{
 "For Figure 9, fix \[Nu]=0.1 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "d"], TraditionalForm]],ExpressionUUID->
  "178e122d-0926-4e6c-ab97-aeebca468187"],
 "=0.05"
}], "Text",
 CellChangeTimes->{{3.779319675646559*^9, 3.779319731258765*^9}, {
   3.7793198862048903`*^9, 3.7793198933054953`*^9}, 
   3.788765006206711*^9},ExpressionUUID->"d3b71e8f-b577-4c1b-a871-\
82d781be583e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU", "=", "0.1"}], ";", " ", 
  RowBox[{"DE", "=", "0.05"}], ";"}]], "Input",
 CellChangeTimes->{{3.766665618702905*^9, 3.766665619171984*^9}, {
   3.766665852762801*^9, 3.766665855249264*^9}, {3.7666660963191466`*^9, 
   3.766666096700388*^9}, 3.766666478219246*^9, {3.7666690799490166`*^9, 
   3.766669081368064*^9}, {3.7793197368474283`*^9, 3.7793197372653427`*^9}, {
   3.7793198983451734`*^9, 
   3.779319898733177*^9}},ExpressionUUID->"578a90c2-0d0e-47e0-8913-\
0af743fe420c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{"vtop", "[", 
      RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7793197574775915`*^9},ExpressionUUID->"41a38307-0ea5-4da8-af63-\
d427e7448de0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JP4HOf2d4A==
       "]]},
     Annotation[#, "Charting`Private`Tag$268456#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 4}, {0., 0.8090224190171689}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768908598622446*^9, 3.7689089504841957`*^9, 
  3.7689090423026466`*^9, 3.7689111961655126`*^9, 3.769004608015543*^9, 
  3.769105318174282*^9, 3.769105724163087*^9, 3.769105818906104*^9, 
  3.7747952885074997`*^9, 3.775315445511156*^9, 3.7793197758554544`*^9, 
  3.7793198289004946`*^9, 3.779319961898656*^9, 3.7887661676271086`*^9, 
  3.7887849408239775`*^9},ExpressionUUID->"2cf6c57d-693b-4a57-87ac-\
8e61f08570dc"]
}, Open  ]],

Cell["For Figure 12, just pick a r<<1 and plot as function of \[Nu]:", "Text",
 CellChangeTimes->{{3.7887655472480483`*^9, 3.7887655937599773`*^9}, 
   3.78876612829419*^9},ExpressionUUID->"82d5701d-bf6c-4c30-b764-\
48e098189338"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Re", "[", 
     RowBox[{"vtop", "[", 
      RowBox[{"0.1", ",", "DE", ",", "\[Nu]"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", "0", ",", "0.49"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788765601354985*^9, 3.7887656319967103`*^9}, {
  3.7887662047413063`*^9, 
  3.78876622364696*^9}},ExpressionUUID->"7b111331-6fb3-48dd-afc1-\
338e65342b9c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVznk4lAkAx3FhGJ4GnUhJVI48WEdletYvm9lUeOiQUjZHRSodi9xNSo6y
O8NEWzFu8wyjGSUTeR1hZt5ERSbHvEXbqig9S83TbrXtH9/n8+93RVjM9oOa
Ghoavt/7X+Ylp7HcBJbHlzXFrHGbOsI6sJ4zI7ECn87YYLqijuji8IrkEhdI
E+UdfqZ1BK9OZ9UtySbEn1NPN+rVESkeiBRIdoDbPivPeiMiPlwY1iuXhEPV
y1q5tEZECAWCvSWS03A2XyzTchQRmU1GWnxJOhjPrctGXWqJ7T0HL9dn5CO3
s11/1EBIKJYVac2kFsGBZpFZQhcQHscjXnMsy+HV+5yy160iaFz9yfoYARwT
GpNo/eWE52pVuFeYCB2LCs6xW0uJWIQmxVBiNO2NL1Um8IkgXaNr69m3EPP3
1er+Y9eJ2Iu7ZhtnG/DMssJupW0hIY+y2u9RLMXpaYPX5ol5RJB25rdEs2ak
nyi3/mlJLhHLtD3jktMC0rk9+Y/tF4iIKNs0dUErYrpTIiOD44kaThYledIG
GV19IvDiTsLwbW3Xe9sOzDzTzDzZdgzu3OnCNwn3kTjX0b01gg02L5XuWd+J
6ZGgOQUPsvFS3vfVVLcbseO1NjwOFxF7j3P9vGToY4wlFccWQGNpXw3tuhw/
HF2n9hm4jvA1/pLEKQWGudH7KeMSjF8x27XN5gE++lk99OCXIc1FmFqU0oP8
Y9+8kqIqsd4+g+Xb/BDViWc37WEI0Hgq7ZN0pheZ7m6//lYrhF2seWF/WR+W
a90VT3JE0KUstT57PsJi6y/mPVU3cTI0S3xg6hEqbD46mdtJQOin7arkPUZV
c+fWe8J6mIUtkV11fgLNJn2tbaa3QXtsnPpw5Ak2G1gFB9c04Ov7u5ripH7k
5QVMGK1pxJDrVPIp4wEEeloGsKul8OKymbGtAwhaQHcQ+Tbh3o2mrlUhT/H8
FzORdLQZHW27rxjrDcLN7l1+dEELlHlXXe9UDyJq9aF85bJWPLp0RObGUsKo
8PeM2vet2F10o3j2nRLpTOK8dLANk/vjWOGXn+EvRty8slvtMFwrdpjvPoQK
1Xjvp+oOLHJLYvBfDOHDHW8fw6L7sBt7c3c4dRja6hKj3Iud6KlqFgbZjmAr
r9nfO7sLqWau0emyEYj/mdq0md2NBQ1Mi8sRoyhN9qvsOCPD2qgyEyVDBQ+z
oaM5OXIcVoipPqEKUeMnzyznKhCyhAJXpAKVlzLZdkWBnUfm8neIVdD1sRyN
uKbARv3DB542qLCSlr6uplwBk61LXwy3qRDAv63YeEcBmTxj7NWgCiyfE2fZ
IwrYyoP//FeLgnbIQnWoNQkL0yxWiw4FtXk0FtqTWBzVUJGmR0Ev2Eq724mE
pt68Q5qGFHIjjAwcmCSGvLte6X5/mg10tNf0JZEtc5qY70RB4revuP0UibMm
Id79zhTOcxgfk+NJxEXmVPPcKLhKUvrWJZMIo7+KNNlAYZX/O526CySY3tde
L/uZgs7OAU5ZIQmnQtkWypvCj/nen0NvkFg9MSvgb6Nwz9N+wqKUxPxM/yNW
ARQW0Q9t4QtJ0JUpipc7KCgTaloP3CTx1VpoVxlI4VKcSeOK2yRm4pXZh/dQ
mEP/sH5cSuJtN+2tzT4Kc1NN3StaSPwHDuFbHA==
       "]]},
     Annotation[#, "Charting`Private`Tag$536604#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.49}, {-0.06085882401347218, 0.2167555359655896}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.788766198100953*^9, 3.7887662296946697`*^9}, 
   3.7887849463723545`*^9},ExpressionUUID->"38be8059-83b9-4162-8aa1-\
938150242fc9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Thrust", "Section",
 CellChangeTimes->{{3.7793199855822144`*^9, 
  3.7793199868338957`*^9}},ExpressionUUID->"d7ff30fd-ea64-40ff-a89b-\
8159fced33e5"],

Cell["\<\
Likewise, next expression corresponds to the dimensionless thrust as in \
eq.(32):\
\>", "Text",
 CellChangeTimes->{{3.7793201128039646`*^9, 3.779320139912879*^9}, {
  3.788765024500313*^9, 
  3.788765024594059*^9}},ExpressionUUID->"2cac2b4a-b508-4cb5-be09-\
d07b012506dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Q", "[", 
    RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "\[Pi]"}], "]"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "/", "\[Pi]"}], "]"}], 
        SuperscriptBox[
         RowBox[{"\[Beta]", "[", 
          RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
         "2"]], "+", 
       RowBox[{
        RowBox[{"Ac", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"c", "[", "\[Nu]", "]"}], "2"], "-", 
          RowBox[{"2", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}],
             "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Bc", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"c", "[", "\[Nu]", "]"}], "2"], "-", 
          RowBox[{"2", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"c", "[", "\[Nu]", "]"}], "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["k", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                 "]"}]], ")"}], "2"]}], ")"}]}], "-", "2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cc", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Beta]", "[", 
              RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}],
             "]"}]}], "+", 
          RowBox[{
           RowBox[{"Dc", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
            "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"c", "[", "\[Nu]", "]"}], "*", "k"}], 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          ")"}], "2"], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cc", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "+", 
          RowBox[{"Dc", "[", 
           RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.774795600678907*^9, 3.7747956155512023`*^9}, {
   3.7747957827880445`*^9, 3.7747960386922584`*^9}, {3.77479608989612*^9, 
   3.774796090505846*^9}, {3.7747962412965136`*^9, 3.7747962636439533`*^9}, 
   3.779320046346989*^9, 
   3.7793201518051567`*^9},ExpressionUUID->"2db352fb-a16d-499a-9489-\
d847f03a378c"],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.7793202569953833`*^9, 
  3.7793202580950117`*^9}},ExpressionUUID->"62af90dd-033c-4836-bf9a-\
597153d5ad94"],

Cell["\<\
To generate Figure 10 y Figure 15 we also need the expression of the thrust \
provided by Veletsos and Younan and Kloukinas before we can compare them:\
\>", "Text",
 CellChangeTimes->{{3.7887666280779724`*^9, 3.7887666799694767`*^9}, {
  3.7887779665103655`*^9, 
  3.788777970761793*^9}},ExpressionUUID->"cac47484-e4d9-469d-80cd-\
f550d7aa58ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QVY", "[", 
   RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"32", "/", 
     SuperscriptBox["\[Pi]", "3"]}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Nu]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Nu]"}], ")"}]}], "]"}]], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "1"}], ")"}], "3"]], 
      FractionBox["1", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"r", "/", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[Pi]", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "n"}], "-", "1"}], ")"}]}], ")"}]}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{"\[ImaginaryI]", "*", "\[Delta]"}]}], "]"}]], ")"}], 
          "2"]}], "]"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788767987298877*^9, 3.788767987580125*^9}, {
  3.7887751339629216`*^9, 3.7887752106958933`*^9}, {3.7887757492242746`*^9, 
  3.788775823201066*^9}, {3.7887778158528085`*^9, 
  3.7887778336116858`*^9}},ExpressionUUID->"76d1b271-8987-48e7-9e96-\
687b082bb484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QK", "[", 
   RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Nu]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Nu]"}], ")"}]}], "]"}]], 
   FractionBox[
    RowBox[{"8", "/", 
     SuperscriptBox["\[Pi]", "2"]}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Pi]", "2"], ")"}], "2"], "-", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       RowBox[{"1", "+", 
        RowBox[{"\[ImaginaryI]", "*", "\[Delta]"}]}]]}], "]"}]]}]}]], "Input",
 CellChangeTimes->{
  3.788767997909006*^9, {3.788776162476424*^9, 3.788776166539482*^9}, {
   3.788777158894257*^9, 3.7887771605016885`*^9}, {3.788777202868108*^9, 
   3.7887772614665937`*^9}, {3.7887774199173465`*^9, 
   3.788777426341545*^9}},ExpressionUUID->"b8cf6e0f-e0c2-4930-bc67-\
9613ccccb599"],

Cell[TextData[{
 "For Figure 10, fix \[Nu]=1/3 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "d"], TraditionalForm]],ExpressionUUID->
  "9245ee1c-2a06-4e05-b67e-bd22c55f84cf"],
 "=0.01"
}], "Text",
 CellChangeTimes->{{3.779319675646559*^9, 3.779319731258765*^9}, {
  3.779320282842348*^9, 3.77932029590093*^9}, {3.7887650931959333`*^9, 
  3.7887650933209324`*^9}},ExpressionUUID->"0b599275-2f9c-4c16-8b67-\
c5d938fbd029"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU", "=", 
   RowBox[{"1", "/", "3"}]}], ";", " ", 
  RowBox[{"DE", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.779320435191127*^9, 
  3.7793204455262575`*^9}},ExpressionUUID->"b86eb19f-aee8-4d9a-b0f5-\
ab50d46deed0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"QK", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"QVY", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"Q", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", 
     RowBox[{"3.5", "*", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"3.5", "*", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox["Pi", "2"], ",", "Pi", ",", " ", 
        RowBox[{"3", " ", 
         FractionBox["Pi", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "5", ",", "10"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7689110550059395`*^9, 3.768911114024946*^9}, {
   3.7689111720732656`*^9, 3.7689111747713985`*^9}, {3.76891437358827*^9, 
   3.7689144136853657`*^9}, {3.76891529605169*^9, 3.7689152963635883`*^9}, {
   3.7690066590760717`*^9, 3.769006659500083*^9}, 3.769006862297021*^9, {
   3.7690071120276985`*^9, 3.7690071392577453`*^9}, 3.7690075924240494`*^9, {
   3.769007647007*^9, 3.7690076507354794`*^9}, {3.7690076841262436`*^9, 
   3.7690077262506285`*^9}, 3.7690079102199974`*^9, 3.769007954751686*^9, 
   3.7691075068697376`*^9, {3.769107681066185*^9, 3.769107681363267*^9}, {
   3.7747963388512464`*^9, 3.7747963460963545`*^9}, {3.7747965397806234`*^9, 
   3.7747965454689116`*^9}, {3.779320182858074*^9, 3.779320196725356*^9}, {
   3.779320307270423*^9, 3.779320313743763*^9}, {3.7887780273847466`*^9, 
   3.788778038154005*^9}, {3.788778353787923*^9, 
   3.788778390139307*^9}},ExpressionUUID->"d633b014-2d42-474e-bc94-\
5e1f9ea08c07"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
oN7tWHQtHxpubR0PRT71SFt8uryFj9sCMf+ZWWwkHyqTqZzgI9bENr74JxsK
Nj6VF7YIcDZ36Msfew42XDDSkewRoMmG+9hO5ItZx82PnBwRYJVgIinHg4N4
aaUlpFAAjqW8h60/B08u7+QsmC2ET/ca9r1rHEQs0Flybp0QB7UuKVjXcmBi
Xu00cFMImwRt+6SNXDAf9j7OdKWgfXD8H39LLlSkZ+SNelIYNW4qttrBhULn
6Ur7kxTiPl2THnPlonTe0C6PGAqfpCer3QK4aJK71J3+gsKusLYVGoVcKMp6
2vQuGoOm7ZO93H+58DAaSnm3Zgy/tRKu1j8V+Yj3rfW15Rhin1kPnK/h4k52
Q7Sixxg+CirSfnRxsV3Z55U8Yww7fZNmp4l8wD6+7Ge78jg0zQI2BM7ngeNp
YldkMI7fMnZHbQx5GKXbyKasGkdsntS7KVMeHiwrWNXrOI6PPYEh+2158P0a
/cXgzjh27nb6pXNZVJ/Rt6FN7w92bFP8kMXlwV13E9d5zwSCd1SHuo3zUKFv
Uq/hP4EC2xOr5ojxwY0jN6hEToDuWpceLMdH3OCFbfmlE6jxDg/8ezEf/neM
K09ITcIihqM/vY+Pk6ot8VtfT+JUXEbLYy8+3jfomr1rnUTmTZvrx3z42Hbp
1OVo7iRojILxb0F83M3x6uhaMIWqwoMNRbf40JFZ/1Qibgrr/2OG7q7j40Jr
sZKF7zS8G8JWyTfwkZt6baA0ZhpJ35YPv/vOh5PmNd3gvGkIfsY4mfTxoVCk
tWFJ3zQej1ospdMEUI6zTGaY0Ahj+UctZasFcFapPcGuoBEHlD2uHzcT4HKj
xSzZjzTiutqcLbqbBbht2uDt1U4jRnWOP4i1E2DttIx7t4QYUWSiH3XouADr
r83pWWwvRix0SFilkCnA85L60MhJMeJmntKoa54AqY2kd4CqODE1mZCbUSqA
3Pwk/cYV4kRj3q15xlUCGNZL7uYeEifCpxJptm0CHDubPq3CFCdGHVQrb3cL
UKG5/yNrVJxwy799un1IgBfuzuJusyQIY8c7/b6UAA0O8x1/W0kQ7flJH2NV
hOi93F6S80GCsJ5Wu9yoKUSlnF9G9C8JoswxGZoGQiRNbIkylJtBxE4nPyxc
KURHj4tjidMM4i8nRlKdrRDzog/OrR6dQdwv0LBXdBFiiWHMD+u5koQCLUV2
9z4hFtcdntVASBKDBSmhQz5CqDUl/KBuSxKJtDRPeowQl/T7U8fsZhI0Z21t
uxtCqKgvfpUePpPwKUz7fidJiMN6UuE5ZTMJC+d064W5QiSvWDihoCNFlBTO
n+FXIkSRvW1UiosUoS6W8aK8TAj79ZKRn+KlCLIww3jrWyEitjZ9DqXTCXcx
3eFr9ULcXHGLWrKNTrx3zsz6xhTiQMTbxPYoOpEmdk/Vq0uIrgMGVjVzpImd
LlkTEVOi/4m8kM0bZYinRfrl9ZIUDJdlS5ZdlyH0xbP9lGZT+OH+dqtznwwx
XpTdfU+Dguw6BwGNIUscFl+QMqxHYXff1IuIP7JEg0uO00ojCsUjK1YbHZhF
5Infr321jkJyq9lqzbWzCWVXw3BpgkLAvQF/9YLZxD/F9zf8vY1CkGogPUNP
jnB2zS3pdKKgsMn4mp7hHOJV8ULvRXspfI3cvHb5wznEUok8XX8Rd6KepV3m
6skTEiV5t6ZPUYhkFvbefyNPdBr9uVMXRGHvgEWFrYoC8Tx3FyMxjMLaqvLh
2uMKRLJBRtqBKApDnfLGse8ViMBMTuaSOAo9D35oGCxWJOy1t+QIblHYmUhX
XnFDkVjBuJP3ikGBmW8xcJCmRAzeMit1yaegkTRlVyRUIt4pXH+o94BC3mIr
+08XlYl7cV1lI+UUHDSaJjBXhQiVXVXxVMQ992M+K8MrVIg90ZefR7ylYBCn
HeR6TJVYJ9ny0qaegj99b2fjkrmEcviSN+pMCo8tzzl70tQI9tSFmt5mCheS
9Ze3DKsRn85/+VDaQUF6kWX2iVF1ooDS+y+4n4Ja5PKFlXIaRNSZM1+2jFAw
a/ZsO2WrSXhy3n+V51HgBB2o6XikRRB+8763jVPoayv+EL9xPqH126f1vtgY
ejJcUjsDdIhx75c/T9LHcETwS9vCWZdo6lPoMpszhq2ka3TBKj3i0UHPXinV
MciS+v/28fWIMXNGE6ExBmeK+ffz/frE/wDIlv31
        "]], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$565661#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
b5zeSajzYa7MWTR7Vof4H+l7CDs=
        "]], LineBox[CompressedData["
1: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
UoM6b5g98D+zK84E
        "]], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$565661#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
WnrjrmWYXdiTUtq4DG2Jo1IZ7suw4bpg0hFmHKuUnpz+a8uQL1YS+ilhCarT
mkHSfxl+fV/p9w9YguKcX6eehS0DI1zWf6/uEsR8eR3ln74Mx5tt0+TKF8G2
5QTZqm8ZXoyuVuztY0Bju0V8+Ogy1Oy1rN9cwQDTbqPtFdPL4GucFmXzlgHa
Q7tNtFlXILaGRH/pw4BN8wIhWyRWQFGgpslZgAFd5GqWlaMrsHdf/xcBSzqc
MdKaTK5aAZDpkW9emmf6HM6KM/UrEJN6v9KKqUN2xdUmSDWvwLN3G7PmG+eB
OGdnGTOwAk4LXCIZ7+bhbXzQxwjWVTi1+6VZOVMnLS7U3gjcvQqqnhHPXPvm
4FGKPcn+9So0/U3VdRubBd8/Cj0S6auQG9pz4G/7LJxZnilsy1mF3qr2FKvf
s7DL4u55my+r8I97t27iu1loXUn/bda8CkSWv012vrMgd2T2mfb6NUj1OdOn
zDcLxezB0mLX12By0L/xlP4M9PhLr7ndXoOXcowId40ZICx/bi1i6r6/J5Q1
XigydfvsbMSJF2uweeCEiSxlBgb7HAjRH9aAcqTIckcX0yeUaY+JTq7B1mch
Ui3+06Cut9TyQJUFFzMqmuSYfvIAm1GF2i4WPP240tfj2xQcL3n+qVWTybMn
TsSaj1Pgr6UaoajDgnwRJy3fJkxBpfo5kyozFrRL930l7j0FdrJNX7kvsOAE
d0jcI/kpeMCVlxTyhgWFuM7mjjxk+nnq8O6ZdBb87OOteDF4EqTTJatOvmVB
7ydHdJf8JiHfJHxq+wcW7CDEsKhenISBiHPajaUsGL1pyX29ySSgjCRVuoMF
fSYyzvmsmwSmEucpFmTFLYG0VVGZCTjtc9aDFsCKXx9XLaU6jEP5lWBCQhAr
CuZ74ymrcVC9+OaVZQgrWqYwtmwyGAeOM4Nl+Y9Y8fpEyJ2qreOQfujsxsA4
Vhy7vv/Q96kxmN109ofIZ1Yc7tH9JXJnDELKnIV16KzI8u3639e5o5An4Fz4
9CIbwrvP/icVR2DhWMbysDU7/uB/pa92ZxAcwnf6pG3nQC1WWY7Pev1Q38nv
c0SNA/OP5fNs2dsPuipj3qy7OfAbRk88UekHqYZE72PaHNj8xW7yrEQ/dIny
e5NMOHDv448W6+h9cCp5xOucK3N9UnXo1ow+sCmO89yazIFFFWHZy+v7oJz3
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
s+8GP6Ybvv1aBs0Q1jCZYnmLH2dss+1aNZvB9qXcOtVgfnwZSfHbotwMrHJP
GmkR/Bja4HnriEgzGOw75+aSw49xhJyVDWNUoGhlOIu840ePf9bU8GEqdOwZ
ty/L40e//zzWEwep4KVx2WbzJ37sSKhM5eihwhs1H/2uz/xIv2wvKU+lAlEh
ZJNNFT/aSrzTF/5JhYYtVf8RavjxilVo5I9SKsTL8wp/rOVH8QPOyV4lVNCU
fbxOsJ4fXcI9+AeKqOAqGcX4TeVHX75rg9PvqFAlnPb3wAA/7pRsJlUlUOGF
0Gjt/CA/sh5ZvpUfRwVHwW2VycP8eI86o5QeQ4Vlcm4J+zg/nvr6Wf9lFBWU
eAuyvs7w42fJwMtvH1MhnL0ieDcrGT8Ru9ve3qbCcTaewAE2Mq7Ipo713qKC
HKuJ3zMOMiaLOVaK+1Phy2qd5wyBjNFXqRvjr1NhgkG1z+YjY3vyXbMuTyqY
Tw7tlRcjY+n1K87HXKjgFrgpf1GcjM+8MxW/OVPhrrC1eu0mMgbmF/lvd6JC
sdZ3pasyZOyJs9so6UCFrSEx4t8VyCh+2V/O8iQV9MQaop4rkbH64zOnqeNU
sMvmFnZVJmNMdUDl82NUeP7vGh9ZlYyHYw8eX7CmApu0xZqtJhmf2Kh0ki2o
IP7h3nXVvWSUalpMGDWngobh1wXOfcz9j5M0a8yocOmi0mQmklHQLml/qgkV
7rOeOX9Ll4yzI3WDCYeokBIRNWSpR8byTYXfXh+kQlshV/fiATL2O+XfKDGi
woLJvlO1RmTU3zn/uNWQyZfuK80JB8l4quSI/toBKhgSuv8YmpExYSJ/1s6A
CmdeipiKHSZjSdHAljh9KvhtM62csCDjxQcBbgN6VPhgWVT63JqMse3Pnzza
T4W6gSltVxsysryNfj+jS4Uxny1F+46TUXnDfls7Jibwnt5NPknGMol32Y06
VJCOf5bXd4qMb7rNK6yZeJ9a9fb802S8mrS1ugupYFPGlvnAnowtMNbsycRX
jmluOX2GjIbzU4ICTBw+dilJ1YmMH7boxBcBFdL8UyS5zpJR4dSBuItM/IPS
/qrZhYx/Hm7crcTEXckColmuZDyU7B06q02FJQ3jZ7fOk5Gsa/DzFxMLV98i
W10k4/hzFWIKE6ue/hQm786sp0jCjYdMbDI9Tlq6TEbWvgbjO0zsErT5bu0V
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
kz/LvI/M0Z6iFSFcz3fr3AWm//ofiOKIsQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$565661#3"]& ], {}}, {{}, {}, {}, {}, {}}}, {}, \
{}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.497787143782138}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.7689143205603323`*^9, 3.7689145937851725`*^9, 3.7689154728098063`*^9, 
   3.7689165534093647`*^9, 3.769006786872303*^9, 3.7690069576599636`*^9, 
   3.769007267306246*^9, 3.769007875081746*^9, 3.769007947266193*^9, 
   3.7690080879886665`*^9, 3.769107658266961*^9, 3.769107832362648*^9, 
   3.7747955333863525`*^9, 3.774796527891966*^9, 3.7747968201371045`*^9, 
   3.7793203004086175`*^9, 3.779320419925323*^9, 3.7793205931445208`*^9, 
   3.788766421502761*^9, 3.7887783278380733`*^9, {3.788778358257015*^9, 
   3.78877837180799*^9}, 3.7887787752331033`*^9, 
   3.788785074661851*^9},ExpressionUUID->"846b3875-34ad-452c-ab3a-\
4c935a1238b7"]
}, Open  ]],

Cell["\<\
In order to generate the results in Figure 11, Figure 15 and Figure 16, just \
tweak the values of NU and DE.\
\>", "Text",
 CellChangeTimes->{{3.779320691303072*^9, 3.7793207458571596`*^9}, {
   3.788765120371924*^9, 3.7887651205437994`*^9}, {3.7887652170973415`*^9, 
   3.7887652311262703`*^9}, {3.7887666143497925`*^9, 3.788766619073123*^9}, {
   3.78877799514248*^9, 3.788777998143031*^9}, 
   3.788778083920645*^9},ExpressionUUID->"a6d7092e-9abb-43f5-b2bd-\
5da78bcd91d3"],

Cell[TextData[{
 "For Figure 14, get the phase of this variable, fixing \[Nu]=0.1 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "d"], TraditionalForm]],ExpressionUUID->
  "5b78f366-2928-4c7d-8384-6adbc1647b66"],
 "=0.03"
}], "Text",
 CellChangeTimes->{{3.779319675646559*^9, 3.779319731258765*^9}, {
  3.779320282842348*^9, 3.77932029590093*^9}, {3.7887650931959333`*^9, 
  3.7887650933209324`*^9}, {3.7887659336360273`*^9, 
  3.7887659555699186`*^9}},ExpressionUUID->"148301be-87a2-40f3-a050-\
73c632311672"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU1", "=", "0.1"}], ";", 
  RowBox[{"NU2", "=", 
   RowBox[{"1", "/", "3"}]}], ";", " ", 
  RowBox[{"DE", "=", "0.03"}], ";"}]], "Input",
 CellChangeTimes->{{3.779320435191127*^9, 3.7793204455262575`*^9}, {
  3.788765959773382*^9, 3.7887659626019535`*^9}, {3.78876678950516*^9, 
  3.7887668003660154`*^9}},ExpressionUUID->"5723ff1b-e3e6-4821-b247-\
d90eaedc5d77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arg", "[", 
      RowBox[{"Q", "[", 
       RowBox[{"r", ",", "DE", ",", "NU1"}], "]"}], "]"}], ",", 
     RowBox[{"Arg", "[", 
      RowBox[{"Q", "[", 
       RowBox[{"r", ",", "DE", ",", "NU2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", 
     RowBox[{"2.5", "*", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.5", "*", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"\[Pi]", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox["Pi", "4"], ",", 
        FractionBox["Pi", "2"], ",", 
        RowBox[{"3", 
         FractionBox["Pi", "4"]}], ",", "Pi", ",", 
        RowBox[{"2.5", " ", 
         FractionBox["Pi", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"\[Pi]", "/", "4"}]}], ",", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7689110550059395`*^9, 3.768911114024946*^9}, {
   3.7689111720732656`*^9, 3.7689111747713985`*^9}, {3.76891437358827*^9, 
   3.7689144136853657`*^9}, {3.76891529605169*^9, 3.7689152963635883`*^9}, {
   3.7690066590760717`*^9, 3.769006659500083*^9}, 3.769006862297021*^9, {
   3.7690071120276985`*^9, 3.7690071392577453`*^9}, 3.7690075924240494`*^9, {
   3.769007647007*^9, 3.7690076507354794`*^9}, {3.7690076841262436`*^9, 
   3.7690077262506285`*^9}, 3.7690079102199974`*^9, 3.769007954751686*^9, 
   3.7691075068697376`*^9, {3.769107681066185*^9, 3.769107681363267*^9}, {
   3.7747963388512464`*^9, 3.7747963460963545`*^9}, {3.7747965397806234`*^9, 
   3.7747965454689116`*^9}, {3.779320182858074*^9, 3.779320196725356*^9}, {
   3.779320307270423*^9, 3.779320313743763*^9}, {3.7887659805419035`*^9, 
   3.7887660232505894`*^9}, {3.788766772409065*^9, 3.788766812558016*^9}, {
   3.788766843725485*^9, 3.78876687161998*^9}, 
   3.788767115693865*^9},ExpressionUUID->"4d5a37c6-de4e-45e8-9c29-\
80c9c3c431d5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Z76V8P8AGP//HQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1076926#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
CTtf/ZTxchDESYJv16kfZ8L/AHYQycE=
       "]]},
     Annotation[#, "Charting`Private`Tag$1076926#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 3.9269908169872414`}, {Rational[-3, 4] Pi, 0}}, {{
     0, 3.9269908169872414`}, {-2.356194490192345, 0}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {3.9269908169872414`, 
      FormBox["3.9269908169872414`", TraditionalForm]}}, {{
      NCache[Rational[-3, 4] Pi, -2.356194490192345], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
      NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
      NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.7689143205603323`*^9, 3.7689145937851725`*^9, 
  3.7689154728098063`*^9, 3.7689165534093647`*^9, 3.769006786872303*^9, 
  3.7690069576599636`*^9, 3.769007267306246*^9, 3.769007875081746*^9, 
  3.769007947266193*^9, 3.7690080879886665`*^9, 3.769107658266961*^9, 
  3.769107832362648*^9, 3.7747955333863525`*^9, 3.774796527891966*^9, 
  3.7747968201371045`*^9, 3.7793203004086175`*^9, 3.779320419925323*^9, 
  3.7793205931445208`*^9, 3.7887665271709003`*^9, 3.7887668855968623`*^9, 
  3.788767099410618*^9, 3.7887673408916054`*^9, 
  3.7887853239996586`*^9},ExpressionUUID->"f91a06c3-0750-4ca9-b804-\
ecb654d7f4c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis of intermediate resonance", "Section",
 CellChangeTimes->{{3.7887651582886133`*^9, 
  3.7887651651652203`*^9}},ExpressionUUID->"15a86e1c-9847-411c-aaf9-\
cc230cf05569"],

Cell[TextData[{
 "To generate the plots in this section, we split the thrust in two \
contributions: the integral of horizontal gradient of horizontal displacement \
at the vertical (\[OpenCurlyDoubleQuote]",
 StyleBox["intdudxw",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]) and the vertical displacement at the top (already \
implemented)."
}], "Text",
 CellChangeTimes->{{3.788765188321456*^9, 3.7887652005889144`*^9}, {
  3.7887653220539*^9, 3.788765334539977*^9}, {3.7887653670380106`*^9, 
  3.7887654430487337`*^9}, {3.7887670581164136`*^9, 
  3.7887670791506844`*^9}},ExpressionUUID->"34693efb-8569-49ab-b09f-\
78db26d55b7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intdudxw", "[", 
    RowBox[{"r_", ",", "\[Delta]_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "\[Pi]"}], "]"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "/", "\[Pi]"}], "]"}], "*", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"c", "[", "\[Nu]", "]"}], "2"], 
          SuperscriptBox[
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "2"]}]]}], "-", 
       RowBox[{
        RowBox[{"Ac", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]}], 
           "]"}], "-", "1"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Bc", "[", 
         RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "]"}], "-", "1"}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["k", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}]], 
          ")"}], "2"], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cc", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{"\[Beta]", "[", 
                RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], 
                "]"}]}], "]"}], "-", "1"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Dc", "[", 
            RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
           "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"\[Beta]", "[", 
               RowBox[{"k", ",", "r", ",", "\[Delta]", ",", "\[Nu]"}], "]"}], 
              "]"}], "-", "1"}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}]}], ";"}]], "Input",\
ExpressionUUID->"ca90b2e5-6b06-456e-a513-4a3d4fd5e0ad"],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.788765481773059*^9, 
  3.788765482523405*^9}},ExpressionUUID->"465ee785-fb7d-4675-be98-\
d66e21326a5f"],

Cell["\<\
Compare the phases of these two components: Figure 13 (a) for \[Nu]=0.1, and \
Figure 13 (b) for \[Nu]=1/3.  \
\>", "Text",
 CellChangeTimes->{{3.788765694326227*^9, 
  3.7887657695771694`*^9}},ExpressionUUID->"386a6149-23d1-47ad-be83-\
b68e19aa9682"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU", "=", "0.1"}], ";", " ", 
  RowBox[{"DE", "=", "0.03"}], ";"}]], "Input",
 CellChangeTimes->{{3.788765676082286*^9, 
  3.7887656865992393`*^9}},ExpressionUUID->"26c72064-1f44-4ce2-acaf-\
84fda94bc340"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arg", "[", 
      RowBox[{"intdudxw", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], ",", 
     RowBox[{"Arg", "[", 
      RowBox[{"vtop", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", 
     RowBox[{"3", "*", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788765802118139*^9, 3.788765819417783*^9}, {
   3.7887658822520847`*^9, 3.78876588642465*^9}, 3.7887660948354597`*^9, 
   3.788766355916256*^9},ExpressionUUID->"79801a94-6877-45ed-9eaf-\
9abec5bacdb5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k4VU0YAHD3XmS7losslSiJqOxFMZM9oSSSFlshKpJ2IUURsibZKku2
CkWUvLYkokIiLbKTst9VfOf76z6/58yZO/POO2fmVXDz3XuMzMXF5Uvh4vr/
V0N4YGNqSiVKEGKwYj+IQnnH3OE99ErUMeCnlbBeDPRTeGN47F4igY7tke9e
iIGJ4oa/vkKvEClBkPd7NQ0c9E8/MQmuQhG33d/dfS8BlzyWNv09Cij0c7Sf
k54MLKmKOWfVAsrZ0jN1rVcG6i7EmauJ1KAv/FfkU07Lgplh1vlfPjWo2lzi
R3beCtj9rvHLrnW1iH+51fCKzXLg+pN6V/5uHboeW6eq2agAinXL1S831qFn
j17J965eA8PZq5s+z9UhN47XStqlNeDtrcGMtK1HGbdG869qrYUz8/sc5wUa
kJd144/HRYoQJpgm3XzlDVrBbzUGbeshf8uGlDPuTchAAD+sqdsEfY63HJ8n
NaGSh9ue+JlsBulLE1Lzb5vQy4bnN6MaN8PNqid3zqm9QxOmX+PUPNXBa4dW
4sX5d8jqG/eBtLMaoLRr++3gGy3ojYV5FXqsBdlHbMJuFbYhqwz9z903t8K3
4Kcm77+3oXtPRCyO9W4FiQei3FTRD+j9c4HE8E16cG2gPTQm4APafaBeK6lL
DzSeq9Y0yX1E49OHH9/fuA1E9Ypft4x8RA+2F6zpYxjAB6PKik8X29HktcOe
7ks7QDZf57N5XDs62KE92brJCI6KlE6/zmtHO3PsMy8fMQJ2b8GGgi/tyPRR
xN+8aiNQPJuWFqrTgQzaRA22hRrDhUfBIVrTHehFthucXG4K8kJmFklen5ET
s05HIMACvP3rjgqGfEbPUh4f2VlkAWXdhlevJn9Gsuzx/k+DFmCZs+XlycbP
qHHG53yNw04IMFRRM1PsQpQ/sx9EDS2hyU9IlPGzC+lL/65+LGsFpz+3f3Hc
342GJjefjODdA3c7j609cKobHV+b2VyrtAdqOpinDoR1o3TlN2R58z0g2i7H
6/SsG5mevP/M5uYeKG7z1j4o0oMMbh05c17IFqbekuMOv+1BEdo7Vgmt3Aun
Xmpaum3pRcaq3h+YjvvgTuWbJDebXnRzfeBF+aB9UF3h+MvtWC86VnNp++ms
fSD8IuiCe0IvsrqgL3v77z54/Kw59+hkL6qfdI2oDreHiSI3iuejb2itS2sm
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
ixe/PCYFCuC2Wc82Ez4WdOXm8WklCODdEZ1iP/lZsJaxszqpVgCH3Cho/ivE
AmWh7LHLDQLY2KtQSY7KAjWFRQm3twKYdX3Q1pqw7q5Sn02tAviujfDyQsKW
mbIyb7sFsMyK+/ZHhVngZ/77DHOS6E/34PNWERZUJUepHJQTxM86tRYu01iQ
p37oRbCCIKYEllXmEU58p2qarSiIxfbIGH4mfILT7PJngyCucb+aulGcBauc
+e8Gb/n/eWpeL+EgpXDe7D2CmBaQw79RkgW4LHhgIlQQZ1SufJctRYzXZvdp
sXBB3D647FAzYekRuSWdCEEctQeVTRKekq6WDb4tiE3v+b/Uk2bBg8AFW7E0
QWxezxFuIUw2uVijUyaIsx0PdvfLsOBNu3960IggnhifzRxewQKP4d7+k+OC
mHVUaIy8kgV8bBPlw38Ecd3alEU5wlYKUs+2zQriGyI/YxwId/q+amIuCmLP
0RqjesKDQtxz/suFsM+mgIn4VSwIlz+p5yYjhIOq2uiFhJW1u4JsVwrhHN53
7xsInziYx6++RghXLLr2zhOey7da/WejELbYGHLVXo4F3OZJlp6mQjiy8MmA
wGoW5Dot3nawEMKXHzbclydsccrzs+kuIbxx42VlXcJRSXouirZCWM7oerIL
YYnB72d/HRLCBWyZmVLCileVHhwMEMJeJyUjrOWJ+3ni7WHL80JYv7VoxJmw
Vx5TVf+SEB66WyniT7joQ3O5dIgQ7nHpf5VEWFvO9/3nW0JYSHhz6FfCxq9e
MHZnCWH3Z7TnBxRYwPWQck09VwifyGiy9yJcfXO3sFi+EG6+0Vh7jrC+w4hi
+xMhPP/OiBlPWH16+d59L4XwcGLbtybCf7+4fdd+LYSpdvvbPhMurH7iJVkj
hHlTAiL6CStFmQV3vRHCK3SlD3EIr1p/rsjxkxBOybbz27CGBV+pdVv0OoWw
iuBkoQ7hu3PUepkvQni3s0sxJixRl9Pz9ZsQLnJyE3cgLHD4M+/hUSGsfU0J
BRFuMlaIN/gthNM7yqpvEA7bcHKV3F8h7Ni4hzeOMBeTW/vnrBCWeob/PCTM
iNd2dV0Swoui8lINhJ9fDJnYQabiO2rrOlsI+7u8P7+Gh4pdbJwdOwj/3Xg0
ZkCAisWrKeW/CBdJFMs0UKnYYIXu7VHCxzmc7GxRKj6cunHzJOHBpoRXx5ZT
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
XQjsoeFFbvL71Qw6/Ael7vG4
       "]]},
     Annotation[#, "Charting`Private`Tag$2058851#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2058851#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0.1, Rational[3, 2] Pi}, {-3.1347207970988906`, 
     3.13691119155447}}, {{0.1, 4.71238898038469}, {-3.1347207970988906`, 
    3.13691119155447}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7887675129073057`*^9, 
  3.7887854882855763`*^9},ExpressionUUID->"778ddce5-832d-427d-9525-\
53e225c02f68"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NU", "=", 
   RowBox[{"1", "/", "3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788765893472453*^9, 
  3.788765897645315*^9}},ExpressionUUID->"93f8d9a4-cd7c-4b6b-9939-\
cedf1928fcdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arg", "[", 
      RowBox[{"intdudxw", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}], ",", 
     RowBox[{"Arg", "[", 
      RowBox[{"vtop", "[", 
       RowBox[{"r", ",", "DE", ",", "NU"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", 
     RowBox[{"3", "*", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7887660983982005`*^9, 
  3.788766361810755*^9},ExpressionUUID->"39a5abce-884a-4da8-b97b-\
a842a94ecf24"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
8D9bM0YW
       "]]},
     Annotation[#, "Charting`Private`Tag$2579364#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xStWCQsGrK5eSQ2iYPwDr5oR4lp/9ZCaEAq2fnv3aIA4K0ko5U8YBe8Xd9V1
E79rbq3hjqBgtEXRmzbiYPa4MckoCjLFJmcaiN03Xluy5yUF2fJ4G6qJzxpq
bj/2hoJa7G9VKoipE3G8u99S8M6esZMlxDFhIl0ScWR+QboTBcRau1xTOT+Q
/Vr1bC6PuK+1PfBXAgV/H/junEPs57X/XEUSBZ/kpRxjEMtIxUPyZwqOPzn2
NpO44DtdNPwbBRXqQq0ziG3Pug25p1PwXPVp//R//fMy8y2zKCjI9Vr8n2Pi
tZ5r5VBQc/bwkn/W0v9wZdN3CgoYGl/+576RJbrChRQ0j3+j+u99fiHX102Q
72C72G02//qTUemcaSqj4PXWkfGsf/03aVdnVVLw7vf6n9n/+nf/GPu6moLW
ufV7/s2HKrHs5t06Cr4X7h/N/9d/zg0Th0YKFqWx8RT/6/9Ml6JhC9mPkJWe
Zf/6px7kVmkn89+qcKTqX/+xCe0rOymo17btZu2//nWXf6H0kPMYuE6gidgm
qPtMyS8K8imkKP3bL04lnT0JgxT8sPlQRT/xm/pPS0L+UvDSoQzGEHHPSs/c
kxMUzOaSjJklvp3V81R9moKp7UJP2Um8SFseurSB3AMaD1R28BCfiRFbO0Jh
Q+rvtDMriDkPek3VcbDh1ge9/0kSv/ndW5FGZcOyJ22bNxL3bEn2uM3PhmGj
O7bsIbZO12sRFWPDwvSQImti9lMpSXPibLhMa8dZR+JXlJX+navZEDa903Mj
7trfv/P9Ojb0cuEZekRsVeXzRE2RDZ15Gi2y/7W//Mth3TY2VBySlSr/136Z
wX7aDtJfotG65n/tzVaP/9jFht2SOzvHiS17vx6x0WJD6wkVRXly3i1mBvkf
nGTD0tYf294R/1xbrJVgwYaJNJ3mVGJH7Wjvams25PiamVpK7BFyclzMng33
0cxXDhM/U6hoiXZhQ519kZq7/+Uzq4Q4xiM2tF1exNlMfKD00oGxHDa8lHfx
P0WSPytH9HyW57Oh8YmWmP3Ex8Q2ZqgWsWFrTPG3E8Q2Nl2K3hVs+LdgHesO
sc+ioahAC+nvyGI2kzhju1KfzDiZ78urgsEkf2+JnLxlJsOO3wS96f0k/zvs
vXD1gBw7XiqMEZ4ljmvvtFXezI49Q/wDAqReSEuWH6RvY8eiJGvZ7cRiMa+F
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
SDK97U2F3r8A/OF4fNkSQHJULOHmRt+/dbulrA==
       "]]},
     Annotation[#, "Charting`Private`Tag$2579364#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0.1, Rational[3, 2] Pi}, {-1.9316540317258484`, 
     3.141513543482604}}, {{0.1, 4.71238898038469}, {-1.9316540317258484`, 
    3.141513543482604}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.788767691244789*^9, 
  3.7887857187675233`*^9},ExpressionUUID->"174fc0f6-b42b-4a8a-9370-\
8899e9359c73"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{770, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 4, 156, "Title",ExpressionUUID->"6ec180d4-c160-462a-8270-35196dcd35ae"],
Cell[828, 28, 262, 5, 34, "Text",ExpressionUUID->"2ca6a505-dc35-47d1-bcec-2d2e4dc20519"],
Cell[1093, 35, 697, 11, 78, "Text",ExpressionUUID->"2f8f6c24-260f-4c35-aa30-9c45b6543c09"],
Cell[CellGroupData[{
Cell[1815, 50, 227, 4, 67, "Chapter",ExpressionUUID->"84b649b4-2fa5-41ae-9e2a-a5b919c75490"],
Cell[CellGroupData[{
Cell[2067, 58, 173, 3, 64, "Subchapter",ExpressionUUID->"4b774698-d97c-446d-92ed-3cdc618b83f6"],
Cell[2243, 63, 220, 5, 34, "Text",ExpressionUUID->"abb3dcbd-82fb-4c58-a5aa-49db2df832a3"],
Cell[CellGroupData[{
Cell[2488, 72, 333, 9, 28, "Input",ExpressionUUID->"a54cce7c-2050-41cd-9751-4d6123291082"],
Cell[2824, 83, 297, 8, 84, "Output",ExpressionUUID->"317cd4ef-7d6c-4daa-aff8-e05bd2ba5859"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3170, 97, 329, 10, 64, "Subchapter",ExpressionUUID->"e002f930-4e31-4487-b85f-b2ac8c06624b"],
Cell[3502, 109, 282, 6, 34, "Text",ExpressionUUID->"75f3860c-f37e-4d06-91b9-8b6b7cd9781e"],
Cell[3787, 117, 1180, 35, 87, "Input",ExpressionUUID->"3bd239f0-278a-4478-9272-9a987c2b65f4"],
Cell[CellGroupData[{
Cell[4992, 156, 248, 5, 28, "Input",ExpressionUUID->"ffc3ce85-6fe8-4dad-983f-2950dcf3a938"],
Cell[5243, 163, 4481, 143, 255, "Output",ExpressionUUID->"041546df-7935-488b-84a0-a0fa04a77840"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9773, 312, 177, 3, 64, "Subchapter",ExpressionUUID->"2a55d724-14f3-4cb1-802a-ea6ed50fa53b"],
Cell[9953, 317, 369, 7, 56, "Text",ExpressionUUID->"3da25277-0621-4a39-a2af-63d7764132f6"],
Cell[CellGroupData[{
Cell[10347, 328, 2857, 81, 160, "Input",ExpressionUUID->"a7ede090-8401-4dc5-95f9-d18ad30c21e5"],
Cell[13207, 411, 3078, 88, 148, "Output",ExpressionUUID->"eeb4d6b2-229a-4a03-bd47-db7d43d66c71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16322, 504, 213, 4, 28, "Input",ExpressionUUID->"f87308ea-0f5f-4d39-8fb0-9b739cd31ccb"],
Cell[16538, 510, 3171, 89, 134, "Output",ExpressionUUID->"d0f2b78e-9736-4b92-8eb8-58232dfacf67"]
}, Open  ]],
Cell[19724, 602, 156, 3, 28, "Input",ExpressionUUID->"bea2ccb5-703a-442c-81ff-9579a3605a30"],
Cell[CellGroupData[{
Cell[19905, 609, 3762, 103, 243, "Input",ExpressionUUID->"0b35d074-096c-456c-a4ea-385bf003bc0f"],
Cell[23670, 714, 23767, 649, 609, "Output",ExpressionUUID->"7a2ceeea-87a5-4b4c-8c53-af9b5ba3e0ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47498, 1370, 256, 4, 67, "Chapter",ExpressionUUID->"cd49016a-5eb1-4cc7-9e50-27060cb7d2a4"],
Cell[CellGroupData[{
Cell[47779, 1378, 172, 3, 64, "Subchapter",ExpressionUUID->"b54ed2d1-c401-45ad-85aa-061565bb5258"],
Cell[47954, 1383, 605, 14, 78, "Text",ExpressionUUID->"70581226-2a9f-49e4-bc07-469cd19583fc"],
Cell[48562, 1399, 415, 13, 53, "Input",ExpressionUUID->"3456849f-86e9-4bfc-90e0-f6b5b1b8e03f"],
Cell[48980, 1414, 316, 9, 52, "Input",ExpressionUUID->"3523f1fd-a466-4a2b-8272-c34164f37da8"],
Cell[49299, 1425, 391, 11, 55, "Input",ExpressionUUID->"4a038fbd-2a55-43ed-b6b7-aefc52094d0f"],
Cell[49693, 1438, 400, 11, 32, "Input",ExpressionUUID->"3f806ce5-9b30-4ce3-8bd8-bcc6f7a8b451"],
Cell[50096, 1451, 414, 11, 32, "Input",ExpressionUUID->"2e9445b8-aa57-4191-85dd-1aa8ac4a3e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50547, 1467, 160, 3, 64, "Subchapter",ExpressionUUID->"06a9e0eb-53ca-4902-b6ba-026377776c30"],
Cell[50710, 1472, 387, 7, 56, "Text",ExpressionUUID->"0830f2b1-c906-4ab9-b5a5-b4a7cc8b153f"],
Cell[51100, 1481, 13185, 330, 425, "Input",ExpressionUUID->"29305d89-148e-4f23-8aa8-5ec488792bf8"],
Cell[64288, 1813, 10750, 273, 397, "Input",ExpressionUUID->"cac5ac8e-e1cb-4f46-a5af-abb72c9a6a53"],
Cell[75041, 2088, 9684, 246, 348, "Input",ExpressionUUID->"3ca1e08c-597a-41be-9805-3881509a7f59"],
Cell[84728, 2336, 12689, 320, 442, "Input",ExpressionUUID->"88b1569c-05c8-4e04-86b6-7c06dd7bda73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97454, 2661, 159, 3, 64, "Subchapter",ExpressionUUID->"95354b41-87a5-42e5-a931-46e532533088"],
Cell[CellGroupData[{
Cell[97638, 2668, 190, 3, 67, "Section",ExpressionUUID->"e47ab147-a377-4e8b-8f45-b27c355d05ed"],
Cell[97831, 2673, 267, 6, 34, "Text",ExpressionUUID->"23145070-6b41-4f5e-9714-a82ce52feb9b"],
Cell[98101, 2681, 2482, 56, 116, "Input",ExpressionUUID->"3e7f6349-9053-49c6-bb60-24b712a05190"],
Cell[100586, 2739, 269, 6, 34, "Text",ExpressionUUID->"d958f032-8021-46d9-9564-99808a9f87ee"],
Cell[CellGroupData[{
Cell[100880, 2749, 155, 3, 53, "Subsection",ExpressionUUID->"651d5e52-cfe9-40d8-a80f-6a16f54d25bc"],
Cell[101038, 2754, 360, 10, 34, "Text",ExpressionUUID->"9fa60983-7fed-4db9-ab04-88b3a2857967"],
Cell[101401, 2766, 465, 9, 28, "Input",ExpressionUUID->"ab2a8037-1baa-4051-aebc-4628818845ec"],
Cell[CellGroupData[{
Cell[101891, 2779, 374, 11, 28, "Input",ExpressionUUID->"79b8e47b-b08a-4e0f-91d3-e6e69437d530"],
Cell[102268, 2792, 14847, 261, 235, "Output",ExpressionUUID->"50bb8573-4904-43c8-872f-c5dbe42d39ef"]
}, Open  ]],
Cell[117130, 3056, 414, 11, 34, "Text",ExpressionUUID->"d3b71e8f-b577-4c1b-a871-82d781be583e"],
Cell[117547, 3069, 517, 10, 28, "Input",ExpressionUUID->"578a90c2-0d0e-47e0-8913-0af743fe420c"],
Cell[CellGroupData[{
Cell[118089, 3083, 374, 11, 28, "Input",ExpressionUUID->"41a38307-0ea5-4da8-af63-d427e7448de0"],
Cell[118466, 3096, 17217, 300, 238, "Output",ExpressionUUID->"2cf6c57d-693b-4a57-87ac-8e61f08570dc"]
}, Open  ]],
Cell[135698, 3399, 230, 3, 34, "Text",ExpressionUUID->"82d5701d-bf6c-4c30-b764-48e098189338"],
Cell[CellGroupData[{
Cell[135953, 3406, 452, 12, 28, "Input",ExpressionUUID->"7b111331-6fb3-48dd-afc1-338e65342b9c"],
Cell[136408, 3420, 3252, 71, 222, "Output",ExpressionUUID->"38be8059-83b9-4162-8aa1-938150242fc9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139721, 3498, 155, 3, 67, "Section",ExpressionUUID->"d7ff30fd-ea64-40ff-a89b-8159fced33e5"],
Cell[139879, 3503, 283, 7, 34, "Text",ExpressionUUID->"2cac2b4a-b508-4cb5-be09-d07b012506dd"],
Cell[140165, 3512, 3732, 101, 222, "Input",ExpressionUUID->"2db352fb-a16d-499a-9489-d847f03a378c"],
Cell[CellGroupData[{
Cell[143922, 3617, 157, 3, 53, "Subsection",ExpressionUUID->"62af90dd-033c-4836-bf9a-597153d5ad94"],
Cell[144082, 3622, 356, 7, 56, "Text",ExpressionUUID->"cac47484-e4d9-469d-80cd-f550d7aa58ad"],
Cell[144441, 3631, 1519, 45, 87, "Input",ExpressionUUID->"76d1b271-8987-48e7-9e96-687b082bb484"],
Cell[145963, 3678, 997, 29, 74, "Input",ExpressionUUID->"b8cf6e0f-e0c2-4930-bc67-9613ccccb599"],
Cell[146963, 3709, 436, 11, 34, "Text",ExpressionUUID->"0b599275-2f9c-4c16-8b67-c5d938fbd029"],
Cell[147402, 3722, 262, 7, 28, "Input",ExpressionUUID->"b86eb19f-aee8-4d9a-b0f5-ab50d46deed0"],
Cell[CellGroupData[{
Cell[147689, 3733, 2151, 51, 84, "Input",ExpressionUUID->"d633b014-2d42-474e-bc94-5e1f9ea08c07"],
Cell[149843, 3786, 43975, 749, 265, "Output",ExpressionUUID->"846b3875-34ad-452c-ab3a-4c935a1238b7"]
}, Open  ]],
Cell[193833, 4538, 487, 9, 56, "Text",ExpressionUUID->"a6d7092e-9abb-43f5-b2bd-5da78bcd91d3"],
Cell[194323, 4549, 524, 12, 34, "Text",ExpressionUUID->"148301be-87a2-40f3-a050-73c632311672"],
Cell[194850, 4563, 398, 9, 28, "Input",ExpressionUUID->"5723ff1b-e3e6-4821-b247-d90eaedc5d77"],
Cell[CellGroupData[{
Cell[195273, 4576, 2486, 62, 103, "Input",ExpressionUUID->"4d5a37c6-de4e-45e8-9c29-80c9c3c431d5"],
Cell[197762, 4640, 38607, 660, 231, "Output",ExpressionUUID->"f91a06c3-0750-4ca9-b804-ecb654d7f4c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236430, 5307, 183, 3, 67, "Section",ExpressionUUID->"15a86e1c-9847-411c-aaf9-cc230cf05569"],
Cell[236616, 5312, 639, 13, 78, "Text",ExpressionUUID->"34693efb-8569-49ab-b09f-78db26d55b7d"],
Cell[237258, 5327, 2687, 75, 245, "Input",ExpressionUUID->"ca90b2e5-6b06-456e-a513-4a3d4fd5e0ad"],
Cell[CellGroupData[{
Cell[239970, 5406, 153, 3, 53, "Subsection",ExpressionUUID->"465ee785-fb7d-4675-be98-d66e21326a5f"],
Cell[240126, 5411, 261, 6, 34, "Text",ExpressionUUID->"386a6149-23d1-47ad-be83-b68e19aa9682"],
Cell[240390, 5419, 240, 6, 28, "Input",ExpressionUUID->"26c72064-1f44-4ce2-acaf-84fda94bc340"],
Cell[CellGroupData[{
Cell[240655, 5429, 689, 18, 49, "Input",ExpressionUUID->"79801a94-6877-45ed-9eaf-9abec5bacdb5"],
Cell[241347, 5449, 31628, 540, 236, "Output",ExpressionUUID->"778ddce5-832d-427d-9525-53e225c02f68"]
}, Open  ]],
Cell[272990, 5992, 218, 6, 28, "Input",ExpressionUUID->"93f8d9a4-cd7c-4b6b-9939-cedf1928fcdb"],
Cell[CellGroupData[{
Cell[273233, 6002, 591, 17, 49, "Input",ExpressionUUID->"39a5abce-884a-4da8-b97b-a842a94ecf24"],
Cell[273827, 6021, 42157, 713, 236, "Output",ExpressionUUID->"174fc0f6-b42b-4a8a-9370-8899e9359c73"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

